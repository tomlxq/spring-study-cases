# \u5B9A\u4E49\u5E94\u7528\u540D\u79F0
spring.application.name=spring-cloud-stream-kafka
# \u5B9A\u4E49Web\u670D\u52A1\u7AEF\u53E3
server.port=2000
# \u5931\u6548\u7BA1\u7406\u5B89\u5168
spring.management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/
management.endpoint.health.show-details=always
# Spring kafka\u7684\u914D\u7F6E\u4FE1\u606F
spring.kafka.bootstrap-servers=192.168.238.160:9092
# Spring kafka\u751F\u4EA7\u8005\u914D\u7F6E
#spring.kafka.producer.bootstrapServers=192.168.238.165:9092
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
# Spring kafka\u6D88\u8D39\u8005\u914D\u7F6E
spring.kafka.consumer.groupId=tomTopic-1
spring.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
# \u5B9A\u4E49kafka\u7684\u4E3B\u9898
kafka.topic=tomTopic
kafka.topic2=tomTopic2
# \u5B9A\u4E49Spring Cloud Stream Source\u6D88\u606F\u7684\u53BB\u5411
spring.cloud.stream.bindings.output.destination=${kafka.topic}
# \u81EA\u5B9A\u4E49 spring.cloud.stream.bindings.${channel-name}.destination=${topic-name}
spring.cloud.stream.bindings.tomOutput.destination=${kafka.topic2}
spring.cloud.stream.bindings.input.destination=${kafka.topic}